@using SSO.API.Models.AccountViewModels;
@using SSO.DataAccess.Entities;
@model LoginAccountView
@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <div>
                <input id="returnUrl" name="returnUrl" value="@Model.ReturnUrl" class="hidden" />
                <h4>Use a local account to log in.</h4>
                <hr />
                <div id="validation-errors"></div>
                <div class="form-group">
                    <label for="email"></label>
                    <input id="email" name="email" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="password"></label>
                    <input type="password" id="password" name="password" class="form-control" />
                </div>
                <div class="form-group">
                    <button onclick="login.login()" type="submit" class="btn btn-default">Log in</button>
                </div>
                <div class="form-group">
                    <p>
                        <a asp-action="ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-action="Register" asp-route-returnurl="@Model.ReturnUrl">Register as a new user?</a>
                    </p>
                </div>
            </div>
        </section>
    </div>
    @*<div class="col-md-6 col-md-offset-2">
            <section>
                <h4>Use another service to log in.</h4>
                <hr />
                @{
                    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                    if (loginProviders.Count == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData[" ReturnUrl"]" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in loginProviders)
                                    {
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>*@
</div>

@section Scripts {
    <script src="~/js/account/login.js"></script>
}
